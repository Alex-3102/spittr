<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache.xsd">
<!--    Cache configuration will go here-->
<!--    <bean class="spittr.config.CachingConfig"/>-->
    <cache:annotation-driven/>
    <aop:config>
        <aop:advisor advice-ref="cacheAdvice"
                     pointcut="execution(* spittr.data.SpitterRepository.*(..))"/>
    </aop:config>
    <cache:advice id="cacheAdvice">
        <cache:caching>
            <cache:cacheable
                cache="spittleCache"
                method="findByUsername"
                unless="#result.username.contains('arc')"
                condition = "!#username.equals('1801030092')"/>
            <cache:cache-put
                cache="spittleCache"
                method="save"
                key="#result.username"/>
        </cache:caching>
    </cache:advice>
<!--    <bean id="cacheManager" class="org.springframework.cache.support.CompositeCacheManager">-->
<!--        <property name="cacheManagers">-->
<!--            <list>-->
<!--                <bean class="org.springframework.data.redis.cache.RedisCacheManager">-->
<!--                    <constructor-arg ref=""-->
<!--                    <property name="cacheNames">-->
<!--                        <list>-->
<!--                            <value>"redis"</value>-->
<!--                        </list>-->
<!--                    </property>-->
<!--                </bean>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

<!--    <bean class="java.lang.Class">-->
<!--        <constructor-arg ref="spitter"/>-->
<!--    </bean>-->
<!--    <cache:annotation-driven/>-->
<!--    <bean id="cacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager"/>-->
<!--    <bean id="cacheManager" class="org.springframework.cache.CacheManager">-->
<!--        <constructor-arg></constructor-arg>-->
<!--    </bean>-->

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" >
        <constructor-arg ref="ehcache"/>
    </bean>
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" ref="path"/>
    </bean>
    <bean id="path" class="org.springframework.core.io.ClassPathResource">
        <constructor-arg value="classpath:cache/ehcache.xml"/>
    </bean>
    <!--    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
<!--        <constructor-arg ref="redisTemplate"/>-->
<!--        <property name="cacheNames">-->
<!--            <set>-->
<!--                <value>redis</value>-->
<!--            </set>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory" ref="redisConnectionFactory"/>-->
<!--        <property name="keySerializer" ref="stringRedisSerializer"/>-->
<!--        <property name="valueSerializer" ref="jsonRedisSerializer"/>-->
<!--    </bean>-->
<!--    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
<!--        <property name="password" value="cjbcjbcjb"/>-->
<!--    </bean>-->
<!--    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--    <bean id="jsonRedisSerializer" class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">-->
<!--        <constructor-arg>-->
<!--            <value type="java.lang.Class">spittr.Spitter</value>-->
<!--        </constructor-arg>-->
<!--    </bean>-->
</beans>